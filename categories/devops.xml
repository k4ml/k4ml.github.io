<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>ImportError (devops)</title><link>http://k4ml.github.io</link><description></description><atom:link href="http://k4ml.github.io/categories/devops.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Mon, 20 Jul 2015 16:21:53 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Ansible: Manage users from central file</title><link>http://k4ml.github.io/posts/ansible-manage-users-from-central-file.html</link><description>&lt;div&gt;&lt;p&gt;I want to achieve this kind of playbook:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Development server&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;devserver&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;sudo&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;vars_files&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;data/users/users.yml&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;vars&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;users&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;all_users.ali&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
        &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;all_users.kamal&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;roles&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;development&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;mysql-client&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;users&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;common&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Users should be defined in a central file but in playbook for each hosts, I should be
able to mix and match users like above. The file &lt;code&gt;data/users/users.yml&lt;/code&gt; above look like:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;all_users&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;ali&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;username&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;ali&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Ali Ahmad&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;groups&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'admin'&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;ssh_key&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"ssh-dss&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;AAAA&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;..."&lt;/span&gt;

    &lt;span class="l-Scalar-Plain"&gt;kamal&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;username&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;kamal&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Kamal Mustafa&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;groups&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'admin'&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;ssh_key&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"ssh-rsa&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;AAAA&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;..."&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;users_deleted&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user1&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Initially I used &lt;a href="https://github.com/mivok/ansible-users/blob/master/tasks/main.yml"&gt;ansible-users&lt;/a&gt; roles but
it has users defined in &lt;code&gt;group_vars&lt;/code&gt; file. It allow me to separate users by group but that also mean if some
users exists in multiple groups, I have to repeat defining the user data.&lt;/p&gt;
&lt;p&gt;My first attempt then look like this:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Development server&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;devserver&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;sudo&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;vars_files&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;data/users/users.yml&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;roles&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;development&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;mysql-client&lt;/span&gt;

  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;include&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tasks/add_user.yml accounts_to_add={{ all_users }}&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;include&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tasks/common.yml users={{ all_users }}&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;include&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tasks/delete_user.yml accounts_to_delete={{ deleted_users }}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With &lt;code&gt;data/users/users.yml&lt;/code&gt; defined as:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;all_users&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;ali&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;kamal&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;aman&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the tasks &lt;code&gt;add_user.yml&lt;/code&gt; was very clunkyly defined:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nn"&gt;---&lt;/span&gt;

&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Create user&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;home=/home/{{ item }} name={{ item }} shell=/bin/bash state=present&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;with_items&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;accounts_to_add&lt;/span&gt;

&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Add SSH key&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;authorized_key&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user={{ item }} key="{{ lookup('file', playbook_dir + '/data/users/' + item + '/key.pub') }}"&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;with_items&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;accounts_to_add&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;tags&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'user-config'&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;

&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Lock user {{ item }}&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;command&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;usermod --lock {{ item }}&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;with_items&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;accounts_to_add&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;tags&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'user-config'&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Had to deal with the &lt;code&gt;lookup()&lt;/code&gt; issue where it keep giving errors:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;fatal: [devserver] =&amp;gt; A variable inserted a new parameter into the module args. Be sure to quote variables if they contain equal signs (for example: "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;").&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The answer actually already there, you have to quote the &lt;code&gt;lookup(...)&lt;/code&gt; but I spent hours looking for solution,
the price has to pay when you didn't read error message properly, sigh ...&lt;/p&gt;
&lt;p&gt;I'm not really satisfied with this solution since it mean for every playbook, you'll keep repeating the tasks
section. [ansible-users] roles is better here since you just include the roles and the users variables being
inferred automatically. So I keep searching for solution to split &lt;code&gt;group_vars&lt;/code&gt; file until I realized can reference
variables in the playbook.&lt;/p&gt;&lt;/div&gt;</description><category>ansible</category><category>devops</category><category>sysadmin</category><guid>http://k4ml.github.io/posts/ansible-manage-users-from-central-file.html</guid><pubDate>Wed, 01 Apr 2015 15:30:52 GMT</pubDate></item><item><title>Ansible: My Playbook</title><link>http://k4ml.github.io/posts/ansible-my-playbook.html</link><description>&lt;div&gt;&lt;p&gt;This is my first playbook that I manage to get it working. It's an achievement for me
as it showed that I started to get the concept around ansible:-&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://k4ml.github.io/posts/ansible-my-playbook.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>ansible</category><category>WIP</category><category>devops</category><category>sysadmin</category><guid>http://k4ml.github.io/posts/ansible-my-playbook.html</guid><pubDate>Mon, 07 Oct 2013 20:02:25 GMT</pubDate></item><item><title>Ansible-Playbook: Specify hosts on the command line</title><link>http://k4ml.github.io/posts/ansible-playbook-specify-hosts-on-the-command-line.html</link><description>&lt;div&gt;&lt;p&gt;While we can specify what hosts to run the command through &lt;code&gt;ansible&lt;/code&gt; command-line
program, it's does not apply to &lt;code&gt;ansible-playbook&lt;/code&gt; program. We always need to
specify the &lt;code&gt;hosts:&lt;/code&gt; attribute in our &lt;a href="http://yaml.org/"&gt;YAML&lt;/a&gt; playbook. It mean if we were to run
someone's else playbook, we always have to edit the playbook to customize the hardcoded
&lt;code&gt;hosts:&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;Googling for this, I found the &lt;a href="https://gist.github.com/marktheunissen/2979474"&gt;workaround&lt;/a&gt; (which a great resource in itself to gain
insight what ansible capable for). We can use variables. So instead of the following
playbook:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;myhostname&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Add user&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name=kamal&lt;/span&gt;
            &lt;span class="l-Scalar-Plain"&gt;groups=admin&lt;/span&gt;
            &lt;span class="l-Scalar-Plain"&gt;shell=/bin/bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can write it as:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;$hosts&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Add user&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name=kamal&lt;/span&gt;
            &lt;span class="l-Scalar-Plain"&gt;groups=admin&lt;/span&gt;
            &lt;span class="l-Scalar-Plain"&gt;shell=/bin/bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then run our playbook as:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;ansible-playbook -u root --extra-vars="hosts=myhostname"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><category>ansible</category><category>devops</category><category>sysadmin</category><guid>http://k4ml.github.io/posts/ansible-playbook-specify-hosts-on-the-command-line.html</guid><pubDate>Sun, 06 Oct 2013 23:28:10 GMT</pubDate></item><item><title>Hosting multiple apps at digital ocean droplet</title><link>http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html</link><description>&lt;div&gt;&lt;div class="contents alert alert-info pull-left topic"&gt;
&lt;p class="first sidebar-title"&gt;Contents&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#nginx"&gt;Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#user"&gt;User&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#php"&gt;PHP&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#drupal"&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#supervisor"&gt;Supervisor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#python"&gt;Python&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#gunicorn"&gt;Gunicorn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#ruby"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html#issues"&gt;Issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;This is to document a setup that I plan on a digital ocean droplet. It should 
allow us to host applications of different platforms to co-exists side by side.&lt;br&gt;
This initially inspired by &lt;a href="https://github.com/progrium/dokku"&gt;dokku&lt;/a&gt; setup but dokku still has some rough edges 
making it not ready yet for production setup. This setup simply eliminate 
[docker] and run application natively on the host instead inside a 
&lt;a href="https://blogs.oracle.com/OTNGarage/entry/linux_containers_part_1_overview"&gt;container&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Based on diagram below, we'll use nginx as our frontend server. It'll not do 
much other than forwarding requests to the backend apps running on different 
port.  Each app will run inside specific user account so in theory it should 
allow us to host apps for multiple users. Some planning on port assignment is 
needed however in case you want to go in this route. For example user1 will use 
port range 10000 and user2 using port 11000 space.&lt;/p&gt;
&lt;p&gt;If you want to skip the write up and straightly get your hand dirty, just
clone the &lt;a href="https://github.com/k4ml/do-hosting"&gt;github repo&lt;/a&gt; and fix all the path to suit your environment.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>php</category><category>python</category><category>hosting</category><category>WIP</category><category>devops</category><category>sysadmin</category><guid>http://k4ml.github.io/posts/hosting-multiple-apps-at-digital-ocean-droplet.html</guid><pubDate>Fri, 04 Oct 2013 12:18:13 GMT</pubDate></item><item><title>Pengenalan Vagrant</title><link>http://k4ml.github.io/posts/pengenalan-vagrant.html</link><description>&lt;div&gt;&lt;p&gt;Tools untuk membina &lt;em&gt;virtual machine&lt;/em&gt; dengan cepat. &lt;em&gt;Virtual Machine&lt;/em&gt; yang 
dibina adalah berasaskan VirtualBox. VirtualBox adalah sebuah mesin maya, 
seperti komputer fizikal atau laptop yang anda biasa guna. Anda boleh membina 
sejumlah mesin maya dan memasang pelbagai jenis OS seperti Ubuntu Linux, 
Windown 7 dan sebagainya.&lt;/p&gt;
&lt;h3 id="kenapa-guna-virtual-machine"&gt;Kenapa guna &lt;em&gt;Virtual Machine&lt;/em&gt; ?&lt;/h3&gt;
&lt;p&gt;Developer biasanya melakukan kerja-kerja pembangunan di komputer desktop atau 
laptop masing-masing. Setelah siap, aplikasi tersebut akan di'deploy' ke server 
khas yang akan dicapai oleh pengguna sistem tersebut. Ini adalah senario 
tipikal dalam pembangunan laman web atau aplikasi web. Konfigurasi desktop atau 
laptop yang digunakan untuk &lt;em&gt;development&lt;/em&gt; biasanya berbeza dengan server yang 
digunakan untuk &lt;em&gt;deployment&lt;/em&gt;. Ini menyebabkan pelbagai isu yang tidak timbul 
semasa proses &lt;em&gt;development&lt;/em&gt; atau &lt;em&gt;testing&lt;/em&gt; muncul apabila ia cuba dijalankan di 
server. Keadaan ini amat membazirkan masa dan antara sebab &lt;em&gt;release&lt;/em&gt; sesuatu 
sistem terpaksa dilengahkan. &lt;/p&gt;
&lt;p&gt;Mengunakan &lt;em&gt;virtual machine&lt;/em&gt;, &lt;em&gt;developer&lt;/em&gt; dapat membina server yang sama 
konfigurasi dengan server sebenar dalam masa yang singkat. Ini membolehkan 
mereka menguji aplikasi yang dibangunkan dalam persekitaran sebenar. &lt;em&gt;Virtual 
Machine&lt;/em&gt; yang dibina itu juga boleh dikongsi dengan &lt;em&gt;developer&lt;/em&gt; lain menjadikan 
proses testing dalam sesuatu &lt;em&gt;development team&lt;/em&gt; semakin pantas dan tidak 
membebankan.&lt;/p&gt;
&lt;h3 id="install"&gt;Install&lt;/h3&gt;
&lt;p&gt;Ada beberapa pilihan bergantung OS yang anda gunakan seperti msi installer 
untuk Windows, package .deb untuk Debian/Ubuntu dan .dmg untuk pengguna MacOS.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;h3 id="contoh-penggunaan-use-case"&gt;Contoh Penggunaan (Use case)&lt;/h3&gt;
&lt;p&gt;Saya hendak membina sebuah &lt;em&gt;base machine&lt;/em&gt; dengan kriteria berikut:-&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Menggunakan OS Ubuntu Precise 32bit.&lt;/li&gt;
&lt;li&gt;Semua package dikemaskini ke versi paling terkini.&lt;/li&gt;
&lt;li&gt;Package seperti postgresql, mysql dan apache2 telah siap di'install'.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Bina machine pertama:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;vagrant box add precise32 http://files.vagrantup.com/precise32.box&lt;/span&gt;
&lt;span class="go"&gt;vagrant init precise32&lt;/span&gt;
&lt;span class="go"&gt;vagrant up&lt;/span&gt;
&lt;span class="go"&gt;vagrant ssh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kini anda sudah berada dalam machine precise32. Update Ubuntu:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;sudo apt-get update&lt;/span&gt;
&lt;span class="go"&gt;sudo apt-get upgrade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install package yang dikehendaki:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;sudo apt-get build-essential apache2 postgresql mysql-server&lt;/span&gt;
&lt;span class="go"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kini anda berada dalam mesin sebenar (fizikal). Kita akan buat copy
untuk mesin yang pertama. Buat satu file konfigurasi asas untuk mesin yang
kita nak pakejkan ini. Simpan sebagai Vagrantfile.pkg:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# Forward apache&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forward_port&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dalam konfigurasi di atas kita membuat &lt;em&gt;port forwarding&lt;/em&gt; dari port 8080 di
mesin fizikal ke port 80 di mesin maya yang bakal kita bina. Ini membolehkan
kita akses apache di mesin maya menggunakan url seperti http://localhost:8080/
daripada laptop atau desktop kita (mesin fizikal). Arahan berikutnya akan
melaksanakan proses &lt;em&gt;packaging&lt;/em&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;vagrant package --vagrantfile Vagrantfile.pkg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Setelah siap, anda akan dapati satu fail bernama &lt;code&gt;package.box&lt;/code&gt;. Fail ini boleh
dikongsikan dengan rakan-rakan yang lain dan mereka akan mendapat sebuah mesin
maya berasaskan Ubuntu Precise 32bit yang telah siap dipasang dengan apache2,
mysql dan postgresql.&lt;/p&gt;
&lt;p&gt;Untuk mula menggunakan box yang baru kita hasilkan tadi, gunakan arahan berikut:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;vagrant box add precise32-base package.box&lt;/span&gt;
&lt;span class="go"&gt;vagrant box list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Anda akan mendapat output seperti berikut:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;lucid32&lt;/span&gt;
&lt;span class="go"&gt;precise32-base&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bina virtual machine baru berasaskan &lt;code&gt;precise32-base&lt;/code&gt;:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;vagrant init precise32-base&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Anda akan mendapat output seperti berikut:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="go"&gt;    A `Vagrantfile` has been placed in this directory. You are now&lt;/span&gt;
&lt;span class="go"&gt;    ready to `vagrant up` your first virtual environment! Please read&lt;/span&gt;
&lt;span class="go"&gt;    the comments in the Vagrantfile as well as documentation on&lt;/span&gt;
&lt;span class="go"&gt;    `vagrantup.com` for more information on using Vagrant.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="rujukan"&gt;Rujukan&lt;/h3&gt;
&lt;p&gt;http://vagrantup.com/&lt;/p&gt;&lt;/div&gt;</description><category>devops</category><category>vagrant</category><guid>http://k4ml.github.io/posts/pengenalan-vagrant.html</guid><pubDate>Sun, 29 Sep 2013 14:43:02 GMT</pubDate></item><item><title>Get started with Ansible</title><link>http://k4ml.github.io/posts/get-started-with-ansible.html</link><description>&lt;div&gt;&lt;div class="contents alert alert-info pull-left topic"&gt;
&lt;p class="first sidebar-title"&gt;Contents&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/get-started-with-ansible.html#inventory"&gt;Inventory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/get-started-with-ansible.html#credentials"&gt;Credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/get-started-with-ansible.html#module"&gt;Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/get-started-with-ansible.html#playbook"&gt;Playbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://k4ml.github.io/posts/get-started-with-ansible.html#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://www.ansibleworks.com"&gt;Ansible&lt;/a&gt; is a configuration management tools, in the same space as &lt;a href="http://puppetlabs.com/"&gt;Puppet&lt;/a&gt;, 
&lt;a href="http://www.opscode.com/chef/"&gt;Chef&lt;/a&gt;, &lt;a href="http://cfengine.com/"&gt;Cfengine&lt;/a&gt;, &lt;a href="http://saltstack.com/"&gt;SaltStack&lt;/a&gt; and &lt;a href="http://alternativeto.net/software/puppet/"&gt;few others&lt;/a&gt;. For so long being a 
developer and also wearing a sysadmin hat, I have try to avoid using any of 
these configuration management software, thinking they just added unnecessary 
complexity to your workflow. But after spending countles hours building 
automation script backed by Makefiles, bash, python with fabric, I started to 
value a dedicated tools for these tasks.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://k4ml.github.io/posts/get-started-with-ansible.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>ansible</category><category>python</category><category>digital ocean</category><category>nginx</category><category>devops</category><category>sysadmin</category><guid>http://k4ml.github.io/posts/get-started-with-ansible.html</guid><pubDate>Thu, 26 Sep 2013 16:56:32 GMT</pubDate></item><item><title>Ansible log</title><link>http://k4ml.github.io/posts/ansible-log.html</link><description>&lt;div&gt;&lt;p&gt;Ansible is an example of clash between sysadmin and developer mentality.&lt;br&gt;
Sysadmin tend to think about system as a whole while developer always think 
about their specific apps. While developer want to isolate, sysadmin want to 
'propagate', if I can use such term.&lt;/p&gt;
&lt;p&gt;I want to try ansible and see if it can be a better alternative to Fabric. The 
first thing to do of course to install it. Since I'd already have my deployment 
tools environment based on buildout, I want to install ansible using my 
buildout config, rather than making it system-wide, or even 'user-wide' (mean 
install it to my &lt;code&gt;$HOME&lt;/code&gt; dir). I don't want to pollute my $HOME, let alone the 
system. It's impossible to install ansible with buildout since it want to write 
to &lt;code&gt;/usr/share/ansible&lt;/code&gt; and buildout will raise &lt;code&gt;SandboxViolationError&lt;/code&gt; 
exception.&lt;/p&gt;
&lt;div class="sidebar"&gt;
&lt;p class="first sidebar-title"&gt;What is virtualenv &amp;amp; pip ?&lt;/p&gt;
&lt;p class="last"&gt;
    Virtualenv allow you to create isolated python environment and pip is
    command line tools to download Python packages from websites such as
    PyPI.
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Fortunately it's still installable through pip and also work inside virtualenv.&lt;br&gt;
Running buildout under virtualenv still raise &lt;code&gt;SandboxViolationError&lt;/code&gt; though.  Enough rant, let's get started:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;virtualenv test-ansible
cd test-ansible
./bin/pip install ansible
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I spent quite sometime reading ansible docs to finally grasp the concept of 
inventory. It's a place (a text file) where you define all the servers you want 
to manage. By default ansible will look in &lt;code&gt;/etc/ansible/hosts&lt;/code&gt; file. You can 
change this through configuration file &lt;a href="http://www.ansibleworks.com/docs/faq.html#id7"&gt;$HOME/.ansible.cfg&lt;/a&gt; and 
set the value &lt;a href="https://github.com/ansible/ansible/blob/devel/examples/ansible.cfg"&gt;hostfile       = /etc/ansible/hosts&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;pipz&lt;/span&gt;
&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Add main user&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name=kamal&lt;/span&gt;
        &lt;span class="l-Scalar-Plain"&gt;home=/home/kamal&lt;/span&gt;

&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Set up authorized key for kamal&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;authorized_key&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user=kamal&lt;/span&gt;
                  &lt;span class="l-Scalar-Plain"&gt;state=present&lt;/span&gt;
                  &lt;span class="l-Scalar-Plain"&gt;key="{{ item }}"&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;with_file&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/kamal/.ssh/id_rsa-do.pub&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Error: Host declaration is required&lt;/p&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/forum/#!topic/ansible-project/QFDzbr3vGD0"&gt;Missing tasks&lt;/a&gt;&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;pipz&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Add main user&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name=kamal&lt;/span&gt;
            &lt;span class="l-Scalar-Plain"&gt;home=/home/kamal&lt;/span&gt;

    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;Set up authorized key for kamal&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;authorized_key&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user=kamal&lt;/span&gt;
                      &lt;span class="l-Scalar-Plain"&gt;state=present&lt;/span&gt;
                      &lt;span class="l-Scalar-Plain"&gt;key="{{ item }}"&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;with_file&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/kamal/.ssh/id_rsa-do.pub&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="code"&gt;&lt;pre&gt;./bin/ansible-playbook main.yml -i ansible_hosts.ini -u root
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;http://lextoumbourou.com/blog/posts/getting-started-with-ansible/#part-3&lt;/p&gt;&lt;/div&gt;</description><category>ansible</category><category>sysadmin</category><category>devops</category><category>python</category><guid>http://k4ml.github.io/posts/ansible-log.html</guid><pubDate>Tue, 24 Sep 2013 18:34:04 GMT</pubDate></item></channel></rss>