<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>ImportError (javascript)</title><link>http://k4ml.github.io</link><description></description><atom:link href="http://k4ml.github.io/categories/javascript.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sat, 20 Jun 2015 12:11:37 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Javascript Self Invoking Function</title><link>http://k4ml.github.io/posts/javascript-self-invoking-function.html</link><description>&lt;div&gt;&lt;p&gt;While peeking into Twitter &lt;a href="https://github.com/twbs/bootstrap/blob/8a74264344489e8b9e10c5c5e2098bb75116b8bd/js/alert.js#L21"&gt;Bootstrap js&lt;/a&gt; code, I noticed function being defined like this:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;"use strict"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// ALERT CLASS DEFINITION&lt;/span&gt;
    &lt;span class="c1"&gt;// ======================&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dismiss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'[data-dismiss="alert"]'&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Alert&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'click'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Noticed the &lt;code&gt;+&lt;/code&gt; sign before the keyword &lt;code&gt;function&lt;/code&gt;. At first I thought it could some typo slipping through the commit but after some google, it turn out that &lt;a href="http://stackoverflow.com/questions/13341698/javascript-plus-sign-in-front-of-function-name"&gt;just another way&lt;/a&gt; to define self invoking function in JavaScript. Those who has been writing some JavaScript, or deal with some JS library probably already familiar with a common idiom to write code like below:-&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#some_dom_id'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;....);&lt;/span&gt;
&lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p class="more"&gt;&lt;a href="http://k4ml.github.io/posts/javascript-self-invoking-function.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>javascript</category><guid>http://k4ml.github.io/posts/javascript-self-invoking-function.html</guid><pubDate>Tue, 03 Dec 2013 17:54:03 GMT</pubDate></item><item><title>Angularjs: Event handler attached to all anchor tag 'a'</title><link>http://k4ml.github.io/posts/angularjs-event-handler-attached-to-all-anchor-tag-a.html</link><description>&lt;p&gt;Noticed today that angular &lt;a href="http://docs.angularjs.org/api/ng.directive:a"&gt;modify the behavior&lt;/a&gt; of 'a' tag to include some event handler by default. Discover this after getting error &lt;code&gt;Object #&amp;lt;g&amp;gt; has no method 'on'&lt;/code&gt; error in my dev console. The error actually showing up after I added jquery to the page but the fact that angular attaching event to all 'a' tag really suprising. I have some 'normal' links I don't want any fancy behavior, just a link. Found a &lt;a href="http://badwing.com/angularjs-heavy-handed-anchor-tag-disable-directive/"&gt;post on how to create new directive to disable the behavior&lt;/a&gt; but for now I manage to escape from this by simply not using angular together with jquery.&lt;/p&gt;</description><category>javascript</category><category>angularjs</category><guid>http://k4ml.github.io/posts/angularjs-event-handler-attached-to-all-anchor-tag-a.html</guid><pubDate>Sun, 17 Nov 2013 17:19:58 GMT</pubDate></item></channel></rss>